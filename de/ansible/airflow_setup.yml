- name: a play that runs entirely on the ansible host
  hosts: 127.0.0.1
  connection: local
  vars:
    local_ansible_dir: /Users/lhu/Documents/source_code/ansible
  tasks:
  - name: check out a git repository
    git:
      repo: git@gitlab.feicore.io:DataEngineering/de-datapipeline.git
      #repo: git://gitlab.feicore.io:DataEngineering/de-datapipeline.git
      dest: "{{ local_ansible_dir }}/git_download/workspace/de-datapipeline"
      update: no
    tags: gitlab
######## Upgrade OS and install required python packages
- hosts: master:workers
  remote_user: etluser
  become: yes
  become_user: etluser #TBD: should I change it to root? 
#  become_method: sudo
  gather_facts: no
  vars:
    remote_home: /home/etluser
    local_ansible_dir: /Users/lhu/Documents/source_code/ansible
  roles:
    - python3-pip-setup # root
    - python-depended-tools-setup # root
    - airflow-setup #root
######### Setting up RabbitMQ: master only
- hosts: master
  remote_user: etluser
  become: yes
  become_user: etluser #TBD: should I change it to root?
  become_method: sudo
  gather_facts: no
  vars_files:
  - vars/airflow_cfg_vars.yml

  roles: 
    - rabbitmq-setup #root
  
- hosts: master:workers
  remote_user: etluser
  become: yes
  become_user: etluser
  become_method: sudo
  gather_facts: no
  vars:
    remote_home: /home/etluser
    local_ansible_dir: /Users/lhu/Documents/source_code/ansible
  vars_files: 
  - vars/airflow_cfg_vars.yml

  tasks:
  - name: modify parameters of remote airflow.cfg
    template: src=files/airflow.cfg.j2 dest={{ remote_home }}/airflow/airflow.cfg owner=etluser group=etluser mode=664
- hosts: master
  remote_user: etluser
  become: yes
  become_user: etluser
  become_method: sudo
  gather_facts: no
  tasks:
  - name: install postgresql-client
    become_user: root
    apt: name=postgresql-client state=installed
  - name: airflow initdb
    command: airflow initdb

- hosts: master:workers
  remote_user: etluser
  become: yes
  become_user: etluser
  become_method: sudo
  gather_facts: no
  vars:
    remote_home: /home/etluser
    local_ansible_dir: /Users/lhu/Documents/source_code/ansible
  pre_tasks:
  - name: Creates directory dags
    file: path="{{ remote_home }}/airflow/dags" state=directory
  - name: Creates directory logs
    file: path="{{ remote_home }}/airflow/logs" state=directory
  - name: Creates directory run
    file: path="{{ remote_home }}/airflow/run" state=directory mode=0777
  - name: copy from local directory to remote
    copy:
      src: "{{ local_ansible_dir }}/git_download/workspace/de-datapipeline/Airflow/dags/"
      dest: "{{ remote_home }}/airflow/dags/"
      force: no
  - name: Creates directory /mnt/etl
    become_user: root
    file: path=/mnt/etl state=directory
  - name: Creates directory /mnt/etl/data
    become_user: root
    file: path=/mnt/etl/data state=directory
  - name: Creates directory /mnt/etl/tmp
    become_user: root
    file: path=/mnt/etl/tmp state=directory
  roles: 
    - microsoft-odbc-driver-setup
######### Setting up Systemd to Run Airflow: both master and workers
  tasks:
  - name: Creates directory /etc/systemd/system if not exist (should already be there)
    file: path=/etc/systemd/system state=directory
  - name: copy airflow files from local git_download to remote /etc/systemd/system
    become_user: root 
    copy:
      src: "{{ item }}"
      dest: /etc/systemd/system
      force: no
    with_fileglob: #this line is a part of task, not copy module, pay attention to the indention
      - "{{ local_ansible_dir }}/git_download/workspace/de-datapipeline/Airflow/airflow-*.service"
  - name: Creates directory /etc/sysconfig if not exist (should be new)
    become_user: root 
    file: path=/etc/sysconfig state=directory
  - name: copy airflow files from source to remote /etc/sysconfig
    become_user: root 
    copy: #copy airflow (it is a file) to /etc/sysconfig (it is a directory)
      src: "{{ local_ansible_dir }}/git_download/workspace/de-datapipeline/Airflow/airflow"
      dest: /etc/sysconfig/
      force: no
######### Setting up Airflow Services to Run on Machine Startup
- hosts: master
  remote_user: etluser
  become_user: etluser
  become: yes
  gather_facts: no
  tags: service 
  roles:
    - airflow-master-enable
- hosts: workers
  remote_user: etluser
  become_user: etluser
  become: yes
  gather_facts: no
  roles:
    - airflow-workers-enable
